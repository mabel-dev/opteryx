# More tests using the TPC-H data set

SELECT COUNT(*) FROM testdata.tpch_tiny.lineitem WHERE l_shipdate = DATE '1995-12-12';
SELECT * FROM testdata.tpch_tiny.orders WHERE o_orderstatus = ANY (ARRAY['P', 'F']);
SELECT * FROM testdata.tpch_tiny.orders WHERE o_orderstatus = 'F';
SELECT COUNT(*) FROM testdata.tpch_tiny.lineitem;
SELECT o_orderkey, l_quantity FROM testdata.tpch_tiny.orders JOIN testdata.tpch_tiny.lineitem ON o_orderkey = l_orderkey WHERE l_quantity > 10;
SELECT l_partkey, SUM(l_extendedprice) FROM testdata.tpch_tiny.lineitem GROUP BY l_partkey;
SELECT c_name, o_orderdate, l_extendedprice FROM testdata.tpch_tiny.customer JOIN testdata.tpch_tiny.orders ON c_custkey = o_custkey JOIN testdata.tpch_tiny.lineitem ON o_orderkey = l_orderkey WHERE l_discount > 0.05;
SELECT * FROM testdata.tpch_tiny.part WHERE p_size > 15 AND p_type LIKE '%BRASS%';
SELECT * FROM testdata.tpch_tiny.orders WHERE o_orderdate BETWEEN DATE '1994-01-01' AND DATE '1994-12-31';
SELECT COUNT(DISTINCT c_mktsegment) FROM testdata.tpch_tiny.customer;
SELECT UPPER(TRIM(c_name)) FROM testdata.tpch_tiny.customer;
SELECT l_orderkey, l_quantity * l_extendedprice AS total_price FROM testdata.tpch_tiny.lineitem;
SELECT o_orderkey, o_totalprice FROM testdata.tpch_tiny.orders ORDER BY o_totalprice DESC LIMIT 10;
SELECT p_name FROM testdata.tpch_tiny.part WHERE p_name LIKE '%ECONOMY%';
SELECT c_name, o_orderkey FROM testdata.tpch_tiny.customer LEFT JOIN testdata.tpch_tiny.orders ON c_custkey = o_custkey;
SELECT l_orderkey, s_name FROM testdata.tpch_tiny.supplier RIGHT JOIN testdata.tpch_tiny.lineitem ON s_suppkey = l_suppkey;
SELECT l_orderkey, l_shipdate, o_orderdate FROM testdata.tpch_tiny.orders JOIN testdata.tpch_tiny.lineitem ON o_orderkey = l_orderkey WHERE l_shipdate > o_orderdate;
SELECT SUBSTRING(c_name FROM 1 FOR 5) FROM testdata.tpch_tiny.customer;
SELECT l_partkey, SUM(l_quantity) FROM testdata.tpch_tiny.lineitem GROUP BY l_partkey HAVING SUM(l_quantity) > 500;
SELECT c_name, CASE WHEN c_acctbal > 1000 THEN 'HIGH' WHEN c_acctbal > 500 THEN 'MEDIUM' ELSE 'LOW' END AS balance_category FROM testdata.tpch_tiny.customer;
SELECT o_orderstatus FROM testdata.tpch_tiny.orders UNION ALL SELECT r_name FROM testdata.tpch_tiny.region;
SELECT * FROM testdata.tpch_tiny.orders WHERE o_orderstatus IN ('O', 'F');
SELECT COUNT(*) FROM testdata.tpch_tiny.customer WHERE c_acctbal < 0;
SELECT c_custkey, c_name FROM testdata.tpch_tiny.customer WHERE c_comment LIKE '%special%requests%';
SELECT l_orderkey, l_extendedprice, l_discount FROM testdata.tpch_tiny.lineitem WHERE l_discount BETWEEN 0.05 AND 0.07;
SELECT n_name, r_name FROM testdata.tpch_tiny.nation JOIN testdata.tpch_tiny.region ON n_regionkey = r_regionkey WHERE r_name = 'ASIA';
SELECT COUNT(DISTINCT l_partkey) FROM testdata.tpch_tiny.lineitem;
SELECT s_name, COUNT(*) FROM testdata.tpch_tiny.supplier GROUP BY s_name ORDER BY COUNT(*) DESC LIMIT 5;
SELECT l_orderkey, SUM(l_extendedprice * (1 - l_discount)) AS revenue FROM testdata.tpch_tiny.lineitem GROUP BY l_orderkey ORDER BY revenue DESC LIMIT 10;
SELECT l_suppkey, COUNT(*) FROM testdata.tpch_tiny.lineitem GROUP BY l_suppkey HAVING COUNT(*) > 50;
SELECT o_orderkey, o_orderdate, o_totalprice FROM testdata.tpch_tiny.orders WHERE o_orderdate >= DATE '1994-01-01' ORDER BY o_totalprice DESC LIMIT 20;
SELECT l_orderkey, l_shipdate, l_extendedprice FROM testdata.tpch_tiny.lineitem WHERE l_shipdate < DATE '1995-06-01';
SELECT COUNT(*) FROM testdata.tpch_tiny.orders WHERE o_totalprice > 50000;
SELECT s_suppkey, s_name FROM testdata.tpch_tiny.supplier LEFT SEMI JOIN testdata.tpch_tiny.lineitem ON s_suppkey = l_suppkey;
SELECT p_partkey, p_name FROM testdata.tpch_tiny.part WHERE p_size IN (5, 10, 15, 20);
SELECT r_name, COUNT(n_name) FROM testdata.tpch_tiny.region JOIN testdata.tpch_tiny.nation ON r_regionkey = n_regionkey GROUP BY r_name;
SELECT o_orderkey, COUNT(l_linenumber) FROM testdata.tpch_tiny.orders JOIN testdata.tpch_tiny.lineitem ON o_orderkey = l_orderkey GROUP BY o_orderkey HAVING COUNT(l_linenumber) > 3;
SELECT o_orderkey, l_partkey, p_name FROM testdata.tpch_tiny.orders JOIN testdata.tpch_tiny.lineitem ON o_orderkey = l_orderkey JOIN testdata.tpch_tiny.part ON l_partkey = p_partkey WHERE p_type LIKE '%COPPER%';
SELECT l_shipmode, COUNT(*) FROM testdata.tpch_tiny.lineitem GROUP BY l_shipmode ORDER BY COUNT(*) DESC;
SELECT * FROM testdata.tpch_tiny.orders WHERE o_orderpriority IS NULL;
SELECT * FROM testdata.tpch_tiny.customer WHERE c_mktsegment = 'AUTOMOBILE' AND c_acctbal < 0;
SELECT l_orderkey, l_extendedprice / NULLIF(l_discount, 0) FROM testdata.tpch_tiny.lineitem WHERE l_discount != 0;
SELECT n_name, r_name FROM testdata.tpch_tiny.nation FULL JOIN testdata.tpch_tiny.region ON n_regionkey = r_regionkey;
SELECT o_orderkey, o_orderdate FROM testdata.tpch_tiny.orders JOIN testdata.tpch_tiny.lineitem ON o_orderkey = l_orderkey ORDER BY o_orderdate NULLS FIRST;
SELECT COUNT(DISTINCT p_type) FROM testdata.tpch_tiny.part WHERE p_size NOT IN (5, 10, 15, 20);
SELECT c_custkey, c_name, COUNT(o_orderkey) FROM testdata.tpch_tiny.customer LEFT JOIN testdata.tpch_tiny.orders ON c_custkey = o_custkey GROUP BY c_custkey, c_name ORDER BY COUNT(o_orderkey) ASC;
SELECT p_name, p_retailprice FROM testdata.tpch_tiny.part WHERE p_retailprice BETWEEN 100 AND 500 ORDER BY RANDOM();
SELECT c_custkey, c_name FROM testdata.tpch_tiny.customer LEFT SEMI JOIN testdata.tpch_tiny.orders ON c_custkey = o_custkey;
SELECT l_shipmode, COUNT(*) FROM testdata.tpch_tiny.lineitem GROUP BY l_shipmode ORDER BY COUNT(*) DESC LIMIT 3;
SELECT c_custkey, c_name FROM testdata.tpch_tiny.customer WHERE c_acctbal < 0;
SELECT l_orderkey, l_discount FROM testdata.tpch_tiny.lineitem WHERE l_discount = 0;
SELECT COUNT(*) FROM testdata.tpch_tiny.orders WHERE o_totalprice > 500000;
SELECT c_custkey, c_name FROM testdata.tpch_tiny.customer LEFT JOIN testdata.tpch_tiny.orders ON c_custkey = o_custkey WHERE o_orderkey IS NULL;
SELECT s_suppkey, s_name FROM testdata.tpch_tiny.supplier LEFT SEMI JOIN testdata.tpch_tiny.lineitem ON s_suppkey = l_suppkey;
SELECT l_orderkey, SUM(l_extendedprice) AS revenue FROM testdata.tpch_tiny.lineitem GROUP BY l_orderkey ORDER BY revenue DESC LIMIT 10;
SELECT COUNT(*) FROM testdata.tpch_tiny.part WHERE p_retailprice BETWEEN 500 AND 1000;
SELECT o_orderpriority, COUNT(*) FROM testdata.tpch_tiny.orders GROUP BY o_orderpriority HAVING COUNT(*) > 5;
SELECT o_orderkey, l_partkey FROM testdata.tpch_tiny.orders JOIN testdata.tpch_tiny.lineitem ON o_orderkey = l_orderkey JOIN testdata.tpch_tiny.part ON l_partkey = p_partkey WHERE p_type LIKE '%BRASS%';
SELECT c_name, o_orderdate, l_extendedprice FROM testdata.tpch_tiny.customer JOIN testdata.tpch_tiny.orders ON c_custkey = o_custkey JOIN testdata.tpch_tiny.lineitem ON o_orderkey = l_orderkey;
SELECT l_suppkey, s_name FROM testdata.tpch_tiny.supplier JOIN (SELECT l_suppkey FROM testdata.tpch_tiny.lineitem GROUP BY l_suppkey) AS suppliers ON s_suppkey = suppliers.l_suppkey;
SELECT o_orderkey, l_extendedprice FROM testdata.tpch_tiny.orders JOIN testdata.tpch_tiny.lineitem ON o_orderkey = l_orderkey WHERE l_extendedprice > 10000;
SELECT p_name, p_retailprice FROM testdata.tpch_tiny.part WHERE p_name LIKE '%ECONOMY%' ORDER BY RANDOM();
SELECT o_orderstatus, COUNT(*) FROM testdata.tpch_tiny.orders GROUP BY o_orderstatus ORDER BY COUNT(*) DESC;
SELECT r_name, COUNT(n_name) FROM testdata.tpch_tiny.region JOIN testdata.tpch_tiny.nation ON r_regionkey = n_regionkey GROUP BY r_name;
SELECT c_custkey, COUNT(o_orderkey) FROM testdata.tpch_tiny.customer LEFT JOIN testdata.tpch_tiny.orders ON c_custkey = o_custkey GROUP BY c_custkey HAVING COUNT(o_orderkey) > 2;
SELECT l_shipmode, COUNT(*) FROM testdata.tpch_tiny.lineitem GROUP BY l_shipmode ORDER BY COUNT(*) DESC LIMIT 3;
SELECT c_custkey, c_name FROM testdata.tpch_tiny.customer JOIN (SELECT o_custkey FROM testdata.tpch_tiny.orders WHERE o_totalprice > 100000) AS high_spenders ON c_custkey = high_spenders.o_custkey;
SELECT p_name, p_type FROM testdata.tpch_tiny.part WHERE p_type LIKE '%COPPER%' OR p_type LIKE '%STEEL%';
SELECT COUNT(*) FROM testdata.tpch_tiny.orders WHERE o_orderdate >= DATE '1995-01-01';
SELECT COUNT(*) FROM testdata.tpch_tiny.lineitem WHERE l_quantity = 0;
SELECT o_orderkey, COUNT(l_linenumber) FROM testdata.tpch_tiny.orders JOIN testdata.tpch_tiny.lineitem ON o_orderkey = l_orderkey GROUP BY o_orderkey;
SELECT s_suppkey, COUNT(*) FROM testdata.tpch_tiny.supplier JOIN testdata.tpch_tiny.lineitem ON s_suppkey = l_suppkey GROUP BY s_suppkey HAVING COUNT(*) > 3;
SELECT n_name, COUNT(c_custkey) FROM testdata.tpch_tiny.nation JOIN testdata.tpch_tiny.customer ON n_nationkey = c_nationkey GROUP BY n_name;
SELECT r_name, COUNT(DISTINCT n_name) FROM testdata.tpch_tiny.region JOIN testdata.tpch_tiny.nation ON r_regionkey = n_regionkey GROUP BY r_name;
SELECT c_custkey, c_name FROM testdata.tpch_tiny.customer WHERE c_acctbal = 0;
SELECT p_partkey, p_name, p_size FROM testdata.tpch_tiny.part WHERE p_size > 50 ORDER BY p_size DESC LIMIT 5;
SELECT l_orderkey, l_partkey FROM testdata.tpch_tiny.lineitem WHERE l_quantity > 100;
SELECT l_orderkey, l_shipdate FROM testdata.tpch_tiny.lineitem WHERE l_shipdate > DATE '1995-06-01';
SELECT l_orderkey, l_discount FROM testdata.tpch_tiny.lineitem WHERE l_discount BETWEEN 0.01 AND 0.05;
SELECT o_orderkey, SUM(l_extendedprice) AS total_price FROM testdata.tpch_tiny.orders JOIN testdata.tpch_tiny.lineitem ON o_orderkey = l_orderkey GROUP BY o_orderkey;
SELECT p_partkey, p_retailprice FROM testdata.tpch_tiny.part WHERE p_retailprice > 100 ORDER BY p_retailprice DESC LIMIT 10;
SELECT s_suppkey, s_name FROM testdata.tpch_tiny.supplier WHERE s_acctbal < 0;
SELECT c_custkey, c_name FROM testdata.tpch_tiny.customer LEFT JOIN testdata.tpch_tiny.orders ON c_custkey = o_custkey WHERE o_orderkey IS NULL;
SELECT p_partkey, p_name FROM testdata.tpch_tiny.part WHERE p_name LIKE '%STEEL%';
SELECT o_orderpriority, COUNT(*) FROM testdata.tpch_tiny.orders GROUP BY o_orderpriority ORDER BY COUNT(*) DESC;
SELECT l_shipmode, COUNT(*) FROM testdata.tpch_tiny.lineitem GROUP BY l_shipmode ORDER BY COUNT(*) DESC LIMIT 5;
SELECT s_name FROM testdata.tpch_tiny.supplier WHERE s_comment LIKE '%special%requests%';
SELECT COUNT(*) FROM testdata.tpch_tiny.orders WHERE o_totalprice BETWEEN 1000 AND 2000;
SELECT l_orderkey, COUNT(*) FROM testdata.tpch_tiny.lineitem GROUP BY l_orderkey HAVING COUNT(*) > 5;
SELECT o_orderstatus, COUNT(*) FROM testdata.tpch_tiny.orders GROUP BY o_orderstatus ORDER BY COUNT(*) DESC;
SELECT p_name, p_size FROM testdata.tpch_tiny.part WHERE p_size IN (25, 50, 75);
SELECT c_custkey, c_name FROM testdata.tpch_tiny.customer JOIN (SELECT o_custkey FROM testdata.tpch_tiny.orders WHERE o_totalprice > 50000) AS high_spenders ON c_custkey = high_spenders.o_custkey;
SELECT s_suppkey, COUNT(*) FROM testdata.tpch_tiny.supplier LEFT JOIN testdata.tpch_tiny.lineitem ON s_suppkey = l_suppkey WHERE l_suppkey IS NULL GROUP BY s_suppkey;
SELECT l_shipdate, COUNT(*) FROM testdata.tpch_tiny.lineitem GROUP BY l_shipdate ORDER BY COUNT(*) DESC LIMIT 10;
SELECT l_partkey, COUNT(*) FROM testdata.tpch_tiny.lineitem GROUP BY l_partkey HAVING COUNT(*) > 100 ORDER BY COUNT(*) DESC;
SELECT COUNT(*) FROM testdata.tpch_tiny.orders WHERE o_totalprice IS NULL;
SELECT c_custkey, c_name FROM testdata.tpch_tiny.customer WHERE c_acctbal > 10000 ORDER BY c_acctbal DESC LIMIT 5;
SELECT s_suppkey, s_name FROM testdata.tpch_tiny.supplier JOIN testdata.tpch_tiny.nation ON s_nationkey = n_nationkey WHERE n_name = 'CANADA';
SELECT o_orderkey, COUNT(l_partkey) FROM testdata.tpch_tiny.orders JOIN testdata.tpch_tiny.lineitem ON o_orderkey = l_orderkey GROUP BY o_orderkey HAVING COUNT(l_partkey) > 10;
SELECT p_partkey, p_name, p_size FROM testdata.tpch_tiny.part WHERE p_name LIKE 'ECONOMY%' OR p_name LIKE 'STANDARD%' ORDER BY p_size ASC;
